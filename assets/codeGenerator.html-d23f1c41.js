import{_ as l,M as o,p as n,q as s,R as e,t as a,N as d,V as t,a1 as i}from"./framework-cf3d8b6f.js";const h={},u=i('<h1 id="代码生成器" tabindex="-1"><a class="header-anchor" href="#代码生成器" aria-hidden="true">#</a> 代码生成器</h1><div class="custom-container tip"><p class="custom-container-title">CRUD简介</p><p>我们在项目开始就规划了代码生成器，现在配合CRUD组件，将更容易完成开发操作，下面介绍代码生成器使用方法。</p></div><h2 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作" aria-hidden="true">#</a> 准备工作</h2>',3),p=e("li",null,"数据表注释和字段注释完善",-1),m=i('<h2 id="载入数据表" tabindex="-1"><a class="header-anchor" href="#载入数据表" aria-hidden="true">#</a> 载入数据表</h2><ul><li>进入后台，点击 [ <code>工具</code> &gt; <code>代码生成器</code> ]，打开代码生成器页面</li></ul><img src="https://s1.ax1x.com/2022/08/21/vyDlsx.png"><ul><li>点击 <code>载入数据表</code>，选择已创建好的数据表，点击弹窗的 <code>确定</code> 按钮</li></ul><img src="https://s1.ax1x.com/2022/08/21/vyDJoD.png"><h2 id="编辑生成信息" tabindex="-1"><a class="header-anchor" href="#编辑生成信息" aria-hidden="true">#</a> 编辑生成信息</h2><div class="custom-container tip"><p class="custom-container-title">提示</p><p>载入数据表后，并不可以直接生成代码，还需要对生成信息进行设置</p></div><img src="https://s1.ax1x.com/2022/08/21/vyD0yt.png"><h3 id="基本信息配置" tabindex="-1"><a class="header-anchor" href="#基本信息配置" aria-hidden="true">#</a> 基本信息配置</h3><img src="https://s1.ax1x.com/2022/08/21/vyDXlR.png"><h4 id="配置信息注意事项和说明" tabindex="-1"><a class="header-anchor" href="#配置信息注意事项和说明" aria-hidden="true">#</a> 配置信息注意事项和说明</h4>',11),x=i("<li>所属菜单可以不选择，默认则为顶级菜单，一般看自己业务情况，如果业务复杂，分了很多功能来管理； 则可以手动建立一个顶级菜单，然后所生成的功能都选择这个顶级菜单</li><li>生成类型一般都可选择单表，如像系统的 <code>菜单管理</code> 和 <code>部门管理</code> 这种树形数据结构，可选择树形增删改查。 但树表要包括<code>树表的ID</code>，<code>树表的父id</code> 和 <code>树的名称</code></li><li>包名是在 <code>Controller</code> 目录下允许再次建立目录以区分功能模块，把相同功能的控制器文件管理在同类的目录里</li><li>生成方式建议 <code>选择压缩包</code> 下载，生成到目录会覆盖文件，如果之前生成过，再次点击生成可能会造成文件被替换</li><li>构建菜单建议选择 <code>不构建菜单</code>，因为点击生成后，每次都会对菜单表插入一次数据，可能会造成菜单的 <code>code</code> 重复； 自己手动导入到数据表也并不麻烦。</li>",5),f=i('<h3 id="字段配置" tabindex="-1"><a class="header-anchor" href="#字段配置" aria-hidden="true">#</a> 字段配置</h3><img src="https://s1.ax1x.com/2022/08/21/vyrX4g.png"><h4 id="字段配置注意事项和说明" tabindex="-1"><a class="header-anchor" href="#字段配置注意事项和说明" aria-hidden="true">#</a> 字段配置注意事项和说明</h4><ul><li>字段描述为生成后的表格列表名称和新增、编辑的字段名称，一般要精简一下</li><li>必填：勾选后前端和后端则会验证该字段是否填写</li><li>插入：勾选后在新增界面会显示该字段</li><li>编辑：勾选后在编辑界面会显示该字段</li><li>列表：勾选后在列表管理界面会显示该字段</li><li>查询：勾选后会在列表搜索栏里显示搜索该字段项</li><li>查询方式：选择相应的SQL搜索数据方式，如果 <code>查询</code> 未勾选，并不会生成相应配置</li><li>页面控件：列表搜索、新增和编辑显示相对应的组件，部分组件可在点击后面的 <code>设置</code> ，对该组件进行调整（字段备注中特定格式 <code>说明:键=值</code> 将会自动生成字典值，如<code>state</code>字段备注为：状态:0=停用,1=启用）</li><li>数据字典：可在页面控件为：下拉框、复选框、单选框和穿梭框的情况下选择，组件配合数据字典，和重复使用一些固定的数据； 在列表、新增和编辑自动配置对应的数据，同时，列表的数据会翻译为字典的标签，这个功能非常常用，请多加利用。</li><li>允许角色<code>（目前未开发）</code>：配置该字段可以允许哪些角色可以看到，用户没有允许的角色，则看不到该数据</li></ul><h3 id="菜单配置" tabindex="-1"><a class="header-anchor" href="#菜单配置" aria-hidden="true">#</a> 菜单配置</h3><img src="https://s1.ax1x.com/2022/08/21/vyrx3j.png"><h4 id="菜单配置注意事项和说明" tabindex="-1"><a class="header-anchor" href="#菜单配置注意事项和说明" aria-hidden="true">#</a> 菜单配置注意事项和说明</h4><div class="custom-container tip"><p class="custom-container-title">提示</p><p>回收站列表项包含三个接口：回收站列表、恢复、真实删除。</p><p>建议这些菜单都勾选上，以免后续需要时还要再重新生成。暂时用不到，不用理会即可。</p></div><h3 id="关联配置" tabindex="-1"><a class="header-anchor" href="#关联配置" aria-hidden="true">#</a> 关联配置</h3><img src="https://s1.ax1x.com/2022/08/21/vysA5F.png"><h4 id="关联配置注意事项和说明" tabindex="-1"><a class="header-anchor" href="#关联配置注意事项和说明" aria-hidden="true">#</a> 关联配置注意事项和说明</h4><div class="custom-container tip"><p class="custom-container-title">提示</p><p>关联配置目前只在模型里生成了定义关联的方法，在实际调用中并未使用，若需要还需自行调用定义的方法。</p></div><p>系统使用的 <code>Hyperf</code> 框架，而 <code>Hyperf</code> 使用的是 <code>Laravel</code> 框架的 <code>Eloquent ORM</code> 包；</p>',13),_={href:"https://hyperf.wiki/2.2/#/zh-cn/db/model",target:"_blank",rel:"noopener noreferrer"},v=i('<h2 id="预览代码" tabindex="-1"><a class="header-anchor" href="#预览代码" aria-hidden="true">#</a> 预览代码</h2><div class="custom-container tip"><p class="custom-container-title">提示</p><p>如果在生成代码后，再次编辑了生成信息，可在预览代码界面直接复制代码</p></div><img src="https://s1.ax1x.com/2022/08/21/vyynJg.png"><h2 id="生成代码及使用" tabindex="-1"><a class="header-anchor" href="#生成代码及使用" aria-hidden="true">#</a> 生成代码及使用</h2><ul><li>在 <code>代码生成器</code> 的列表页面，点击 <code>生成代码</code> 按钮，系统会向浏览器发送下载数据，接收下载的一个压缩包。</li><li>压缩包内分为 <code>php</code> 目录和 <code>vue</code> 目录，分别存放着后端和前端的代码</li><li>前后端的目录层级都已经在生成过程中设置好</li></ul><h3 id="导入菜单" tabindex="-1"><a class="header-anchor" href="#导入菜单" aria-hidden="true">#</a> 导入菜单</h3><ul><li>打开压缩包的 <code>menu.sql</code> 文件，复制文件里的所有SQL语句，粘贴到数据库工具内执行SQL。让对应功能的菜单生成</li></ul><div class="custom-container warning"><p class="custom-container-title">提示</p><p>如果勾选了构建菜单，则不需要执行这一步</p></div><h3 id="使用后端代码" tabindex="-1"><a class="header-anchor" href="#使用后端代码" aria-hidden="true">#</a> 使用后端代码</h3><ul><li>打开压缩包的 <code>php</code> 目录，复制里面的所有目录和文件</li><li>打开后端根目录，粘贴进去（如之前生成过，请不要直接粘贴，以免造成之前的文件被覆盖）</li><li>执行 <code>composer dump-autoload -o</code> 命令，清除框架的代理缓存类</li><li>结束框架进程，重新启动框架</li></ul><h3 id="使用前端代码" tabindex="-1"><a class="header-anchor" href="#使用前端代码" aria-hidden="true">#</a> 使用前端代码</h3><ul><li>打开压缩包的 <code>vue</code> 目录，复制里面的所有目录和文件</li><li>打开前端根目录，粘贴进去（如之前生成过，请不要直接粘贴，以免造成之前的文件被覆盖）</li><li>鼠标移动到后台右上角的头像，点击 <code>清除缓存</code> 更新用户的菜单数据，刷新浏览器，看是否显示新增的菜单</li><li>点击新增的菜单，看页面是否显示，如果不显示，请重启前端</li></ul>',12);function g(b,y){const c=o("RouterLink"),r=o("ExternalLinkIcon");return n(),s("div",null,[u,e("ul",null,[e("li",null,[a("建立好数据表，请遵循数据表的 "),d(c,{to:"/guide/further/mustLearn/db.html"},{default:t(()=>[a("[设计规则]")]),_:1})]),p]),m,e("ul",null,[e("li",null,[a("所属模块请注意自己的表名称是否匹配模块，如不熟悉请阅读数据表 "),d(c,{to:"/further/mustLearn/db.html"},{default:t(()=>[a("[设计规则]")]),_:1})]),x]),f,e("p",null,[a("具体定义方法和使用方法请看相关文档 "),e("a",_,[a("[Hyperf模型章节]"),d(r)])]),v])}const k=l(h,[["render",g],["__file","codeGenerator.html.vue"]]);export{k as default};
