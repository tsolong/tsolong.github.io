import{_ as n,p as s,q as a,a1 as p}from"./framework-cf3d8b6f.js";const t={},e=p(`<p>MineAdmin 专门开发了数据联动功能，可大大简化日常开发中的繁琐</p><div class="custom-container tip"><p class="custom-container-title">必要条件</p><p>使用数据联动需要有以下几个条件：</p><ul><li>formType 组件类型比如为：<strong>select | radio</strong> 两种类型</li><li>联动和被联动的字段都需要在 columns 属性中使用字典</li><li>被联动数据字典只支持 url 请求方式</li><li>被联动数据不支持字典翻译（表格的单元格只会显示原始数据，需自行用插槽实现）</li></ul></div><ul><li>使用说明</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 省略其他示例代码</span>

<span class="token comment">// 组件的字段设置</span>
<span class="token keyword">const</span> columnsOptions <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;数据A&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&#39;dataA&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">formType</span><span class="token operator">:</span> <span class="token string">&#39;select&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dict</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token comment">// 调用某字典数据</span>
            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;demo_dict_name&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;key&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">// 定义联动，dataA的数据改变，dataB和dataC的数据也会变化</span>
        <span class="token literal-property property">cascaderItem</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;dataB&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dataC&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;数据B&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&#39;dataB&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">formType</span><span class="token operator">:</span> <span class="token string">&#39;select&#39;</span><span class="token punctuation">,</span>
        <span class="token comment">// 定义字典，组件会自动将dataA选择的值把{{key}}替换掉，进行服务器请求</span>
        <span class="token literal-property property">dict</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;demo/dataB/{{key}}&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;key&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;数据C&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&#39;dataC&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">formType</span><span class="token operator">:</span> <span class="token string">&#39;select&#39;</span><span class="token punctuation">,</span>
        <span class="token comment">// 定义字典，未带{{key}}，组件会自动在该url后面追加?key=value 上dataA的值</span>
        <span class="token literal-property property">dict</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;demo/dataC&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;key&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">// 同时，定义定义联动字段dataD</span>
        <span class="token literal-property property">cascaderItem</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;dataD&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;数据D&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&#39;dataD&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">formType</span><span class="token operator">:</span> <span class="token string">&#39;select&#39;</span><span class="token punctuation">,</span>
        <span class="token comment">// 定义字典，组件会自动将dataC选择的值把{{key}}替换掉，进行服务器请求</span>
        <span class="token literal-property property">dict</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;demo/dataD?id={{key}}&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;key&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">// 省略其他示例代码</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[e];function l(r,c){return s(),a("div",null,o)}const u=n(t,[["render",l],["__file","cascaderItem.html.vue"]]);export{u as default};
