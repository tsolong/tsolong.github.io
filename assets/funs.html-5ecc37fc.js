import{_ as n,p as s,q as a,a1 as e}from"./framework-cf3d8b6f.js";const p={},t=e(`<h1 id="内置函数" tabindex="-1"><a class="header-anchor" href="#内置函数" aria-hidden="true">#</a> 内置函数</h1><h2 id="container-从容器获取单例" tabindex="-1"><a class="header-anchor" href="#container-从容器获取单例" aria-hidden="true">#</a> container() 从容器获取单例</h2><p>此函数使用的是 <code>hyperf</code> 的DI，做了封装，可方便快捷的从容器获取类的单例。</p><ul><li>示例代码：</li></ul><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 获取 \\Mine\\MineRequest 的单例</span>
<span class="token variable">$request</span> <span class="token operator">=</span> <span class="token function">container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Mine<span class="token punctuation">\\</span>MineRequest</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="redis-获取redis实例" tabindex="-1"><a class="header-anchor" href="#redis-获取redis实例" aria-hidden="true">#</a> redis() 获取Redis实例</h2><p>此函数可以获取Redis实例对象，可对redis进行相关操作</p><ul><li>示例代码：</li></ul><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 获取 Redis 的实例</span>
<span class="token variable">$redis</span> <span class="token operator">=</span> <span class="token function">redis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="console-获取控制台输出实例" tabindex="-1"><a class="header-anchor" href="#console-获取控制台输出实例" aria-hidden="true">#</a> console() 获取控制台输出实例</h2><p>此函数可以获取控制台输出实例对象，可以在控制台输出信息，进行代码调试等操作。</p><ul><li>示例代码：</li></ul><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 获取控制台输出实例</span>
<span class="token variable">$console</span> <span class="token operator">=</span> <span class="token function">console</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$console</span><span class="token operator">-&gt;</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;警告信息&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$console</span><span class="token operator">-&gt;</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;普通信息&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$console</span><span class="token operator">-&gt;</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;注意信息&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$console</span><span class="token operator">-&gt;</span><span class="token function">notice</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;提示信息&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$console</span><span class="token operator">-&gt;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;错误信息&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$console</span><span class="token operator">-&gt;</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;调试信息&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$console</span><span class="token operator">-&gt;</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;日志信息&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="logger-获取日志对象" tabindex="-1"><a class="header-anchor" href="#logger-获取日志对象" aria-hidden="true">#</a> logger() 获取日志对象</h2><p>此函数可以获取日志对象，对错误、警告、操作等信息可以保存成日志文件。</p><ul><li>示例代码：</li></ul><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 获取控制台输出实例</span>
<span class="token variable">$logger</span> <span class="token operator">=</span> <span class="token function">logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$logger</span><span class="token operator">-&gt;</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;警告日志&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$logger</span><span class="token operator">-&gt;</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;普通日志&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$logger</span><span class="token operator">-&gt;</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;注意日志&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$logger</span><span class="token operator">-&gt;</span><span class="token function">notice</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;提示日志&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$logger</span><span class="token operator">-&gt;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;错误日志&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$logger</span><span class="token operator">-&gt;</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;调试日志&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$logger</span><span class="token operator">-&gt;</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;一般日志&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="其他函数" tabindex="-1"><a class="header-anchor" href="#其他函数" aria-hidden="true">#</a> 其他函数</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token doc-comment comment">/**
 * 获取当前登录用户实例
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">string</span></span> <span class="token parameter">$scene</span>
 * <span class="token keyword">@return</span> <span class="token class-name">LoginUser</span>
 */</span>
<span class="token function">user</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$scene</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 获取APP应用请求实例
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">string</span></span> <span class="token parameter">$scene</span>
 * <span class="token keyword">@return</span> <span class="token class-name">AppVerify</span>
 */</span>
<span class="token function">app_verify</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$scene</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;api&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 格式化大小
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">int</span></span> <span class="token parameter">$size</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">string</span></span>
 */</span>
<span class="token function">format_size</span><span class="token punctuation">(</span><span class="token keyword type-hint">int</span> <span class="token variable">$size</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 多语言函数
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">string</span></span> <span class="token parameter">$key</span> 语言包key
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">array</span></span> <span class="token parameter">$replace</span> 语言包关键字替换指定内容
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">string</span></span>
 * <span class="token keyword">@throws</span> <span class="token class-name"><span class="token punctuation">\\</span>Psr<span class="token punctuation">\\</span>Container<span class="token punctuation">\\</span>ContainerExceptionInterface</span>
 * <span class="token keyword">@throws</span> <span class="token class-name"><span class="token punctuation">\\</span>Psr<span class="token punctuation">\\</span>Container<span class="token punctuation">\\</span>NotFoundExceptionInterface</span>
 */</span>
<span class="token function">t</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$replace</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 创建一个Mine的集合类
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">null</span><span class="token punctuation">|</span><span class="token keyword">mixed</span></span> <span class="token parameter">$value</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">\\</span>Mine<span class="token punctuation">\\</span>MineCollection</span>
 */</span>
<span class="token function">mine_collect</span><span class="token punctuation">(</span><span class="token variable">$value</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 设置协程上下文数据
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">string</span></span> <span class="token parameter">$key</span> 
 * <span class="token keyword">@param</span> <span class="token parameter">$data</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">bool</span></span>
 */</span>
<span class="token function">context_set</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 获取上下文数据
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">string</span></span> <span class="token parameter">$key</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">mixed</span></span>
 */</span>
<span class="token function">context_get</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 事件调度快捷方法
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">object</span></span> <span class="token parameter">$dispatch</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">object</span></span>
 * <span class="token keyword">@throws</span> <span class="token class-name"><span class="token punctuation">\\</span>Psr<span class="token punctuation">\\</span>Container<span class="token punctuation">\\</span>ContainerExceptionInterface</span>
 * <span class="token keyword">@throws</span> <span class="token class-name"><span class="token punctuation">\\</span>Psr<span class="token punctuation">\\</span>Container<span class="token punctuation">\\</span>NotFoundExceptionInterface</span>
 */</span>
<span class="token function">event</span><span class="token punctuation">(</span><span class="token keyword type-hint">Object</span> <span class="token variable">$dispatch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 推送消息到队列
 * <span class="token keyword">@param</span> <span class="token class-name">QueueMessageVo</span> <span class="token parameter">$message</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token keyword">array</span></span> <span class="token parameter">$receiveUsers</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">bool</span></span>
 * <span class="token keyword">@throws</span> <span class="token class-name">Throwable</span>
 * <span class="token keyword">@throws</span> <span class="token class-name"><span class="token punctuation">\\</span>Psr<span class="token punctuation">\\</span>Container<span class="token punctuation">\\</span>ContainerExceptionInterface</span>
 * <span class="token keyword">@throws</span> <span class="token class-name"><span class="token punctuation">\\</span>Psr<span class="token punctuation">\\</span>Container<span class="token punctuation">\\</span>NotFoundExceptionInterface</span>
 */</span>
<span class="token function">push_queue_message</span><span class="token punctuation">(</span><span class="token class-name type-declaration">QueueMessageVo</span> <span class="token variable">$message</span><span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$receiveUsers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 添加任务到队列
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">\\</span>App<span class="token punctuation">\\</span>System<span class="token punctuation">\\</span>Vo<span class="token punctuation">\\</span>AmqpQueueVo</span> <span class="token parameter">$amqpQueueVo</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">bool</span></span>
 * <span class="token keyword">@throws</span> <span class="token class-name">Throwable</span>
 * <span class="token keyword">@throws</span> <span class="token class-name"><span class="token punctuation">\\</span>Psr<span class="token punctuation">\\</span>Container<span class="token punctuation">\\</span>ContainerExceptionInterface</span>
 * <span class="token keyword">@throws</span> <span class="token class-name"><span class="token punctuation">\\</span>Psr<span class="token punctuation">\\</span>Container<span class="token punctuation">\\</span>NotFoundExceptionInterface</span>
 */</span>
<span class="token function">add_queue</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>App<span class="token punctuation">\\</span>System<span class="token punctuation">\\</span>Vo<span class="token punctuation">\\</span>AmqpQueueVo</span> <span class="token variable">$amqpQueueVo</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),o=[t];function c(l,i){return s(),a("div",null,o)}const u=n(p,[["render",c],["__file","funs.html.vue"]]);export{u as default};
