import{_ as n,p as a,q as s,a1 as e}from"./framework-cf3d8b6f.js";const t={},c=e(`<h1 id="数据权限" tabindex="-1"><a class="header-anchor" href="#数据权限" aria-hidden="true">#</a> 数据权限</h1><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h2><p>在实际开发中，需要设置用户只能查看哪些部门的数据，这种情况一般称为数据权限。 例如对于销售，财务的数据，它们是非常敏感的，因此要求对数据权限进行控制， 对于基于集团性的应用系统而言，就更多需要控制好各自公司的数据了。 如设置只能看本公司、或者本部门的数据，对于特殊的领导，可能需要跨部门的数据， 因此程序不能硬编码那个领导该访问哪些数据，需要进行后台的权限和数据权限的控制。</p><h2 id="全局设置" tabindex="-1"><a class="header-anchor" href="#全局设置" aria-hidden="true">#</a> 全局设置</h2><p>在 <code>config/autoload/mineadmin.php</code> 里全局设置是否开启数据权限</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// 是否启用数据权限</span>
    <span class="token string single-quoted-string">&#39;data_scope_enabled&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h2><div class="custom-container tip"><p class="custom-container-title">超管（创始人）</p><p>超级管理员 <code>superAdmin</code> 默认为所有访问权限和数据权限，其角色同样如此。</p></div><div class="custom-container warning"><p class="custom-container-title">数据表相关</p><p>若想使用数据权限，MineAdmin自带的数据表请忽略。 但自建的数据表都需要有 <code>created_by</code> 字段，且类型为<code>bigint</code></p></div><h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h2><p>MineAdmin 通过 <code>Builder</code> 类的 <code>macro</code> 方法扩展出了一个方法 <code>userDataScope()</code>。</p><p>不管你是用 查询构造器 方式还是使用 模型查询，都可以使用该方法</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 查询构造器使用</span>
<span class="token class-name static-context">Db</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">userDataScope</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 模型使用</span>
<span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">userDataScope</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样，查询出的数据会自动设置该用户所允许查看的数据了。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>如果使用系统封装好的curd，那么系统已经默认调用该方法了。</p></div>`,15),p=[c];function o(i,d){return a(),s("div",null,p)}const r=n(t,[["render",o],["__file","dataScope.html.vue"]]);export{r as default};
