import{_ as t,p as e,q as n,a1 as s}from"./framework-cf3d8b6f.js";const a={},r=s(`<h1 id="获取用户信息" tabindex="-1"><a class="header-anchor" href="#获取用户信息" aria-hidden="true">#</a> 获取用户信息</h1><div class="custom-container tip"><p class="custom-container-title">提示</p><p>在实际项目中，使用当前登录用户的一些信息是非常常见的，MineAdmin在前后各端都有获取当前登录用户信息的方式</p></div><h2 id="前端获取方式" tabindex="-1"><a class="header-anchor" href="#前端获取方式" aria-hidden="true">#</a> 前端获取方式</h2><p>在前端中，用户信息存放在 <code>store</code> 中，也就是 <code>Pinia</code> 的状态管理，这个是Vue配套的全局状态管理程序，在下一次浏览器刷新前的生命周期内一直存在，而且会被实时监听数据的变化，同时，在所有的vue页面或者js文件中都可以调用及使用。</p><h4 id="使用方式" tabindex="-1"><a class="header-anchor" href="#使用方式" aria-hidden="true">#</a> 使用方式</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useUserStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/store&#39;</span>

<span class="token keyword">const</span> userStore <span class="token operator">=</span> <span class="token function">useUserStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 当前登录的用户所有信息，包括 id 用户名 昵称 等信息</span>
<span class="token keyword">const</span> user <span class="token operator">=</span> userStore<span class="token punctuation">.</span>user
<span class="token comment">// 当前用户的权限标识列表</span>
<span class="token keyword">const</span> codes <span class="token operator">=</span> userStore<span class="token punctuation">.</span>codes
<span class="token comment">// 当前用户的角色列表</span>
<span class="token keyword">const</span> roles <span class="token operator">=</span> userStore<span class="token punctuation">.</span>roles
<span class="token comment">// 当前用户的菜单列表</span>
<span class="token keyword">const</span> menus <span class="token operator">=</span> userStore<span class="token punctuation">.</span>menus
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="后端获取方式" tabindex="-1"><a class="header-anchor" href="#后端获取方式" aria-hidden="true">#</a> 后端获取方式</h2><p>后端使用的是 <code>jwt</code> 来存储用户信息，所以后端是通过前端携带的 <code>Token</code> 来识别当前用户。</p><h4 id="使用方式-1" tabindex="-1"><a class="header-anchor" href="#使用方式-1" aria-hidden="true">#</a> 使用方式</h4><p>在后端任何地方，只需要调用 <code>user()</code> 函数即可获取实例化后的 <code>LoginUser</code> 对象</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 获取 LoginUser 对象</span>
<span class="token variable">$user</span> <span class="token operator">=</span> <span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 获取当前用户ID</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:center;">方法名</th><th style="text-align:center;">参数</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">check</td><td style="text-align:center;">?string $token = null, string $scene = &#39;default&#39;</td><td style="text-align:center;">检查用户是否登录，可传入指定token检查</td></tr><tr><td style="text-align:center;">getJwt</td><td style="text-align:center;">无</td><td style="text-align:center;">获取 <code>jwt</code> 对象</td></tr><tr><td style="text-align:center;">getUserInfo</td><td style="text-align:center;">?string $token = null</td><td style="text-align:center;">获取当前用户的所有信息</td></tr><tr><td style="text-align:center;">getId</td><td style="text-align:center;">无</td><td style="text-align:center;">获取当前用户ID</td></tr><tr><td style="text-align:center;">getUsername</td><td style="text-align:center;">无</td><td style="text-align:center;">获取当前登录用户名</td></tr><tr><td style="text-align:center;">getUserRole</td><td style="text-align:center;">array $columns = [&#39;id&#39;, &#39;name&#39;, &#39;code&#39;]</td><td style="text-align:center;">获取当前用户的角色列表</td></tr><tr><td style="text-align:center;">getUserPost</td><td style="text-align:center;">array $columns = [&#39;id&#39;, &#39;name&#39;, &#39;code&#39;]</td><td style="text-align:center;">获取当前登录的岗位列表</td></tr><tr><td style="text-align:center;">getUserDept</td><td style="text-align:center;">array $columns = [&#39;id&#39;, &#39;name&#39;]</td><td style="text-align:center;">获取当前登录用户部门列表</td></tr><tr><td style="text-align:center;">getUserType</td><td style="text-align:center;">无</td><td style="text-align:center;">获取当前登录用户类型</td></tr><tr><td style="text-align:center;">isSuperAdmin</td><td style="text-align:center;">无</td><td style="text-align:center;">检查当前用户是否为超级管理员（创始人）</td></tr><tr><td style="text-align:center;">isAdminRole</td><td style="text-align:center;">无</td><td style="text-align:center;">检查当前用户是否为超管角色（创始人角色）</td></tr></tbody></table>`,12),d=[r];function l(c,i){return e(),n("div",null,d)}const p=t(a,[["render",l],["__file","userinfo.html.vue"]]);export{p as default};
