import{_ as e,p as d,q as c,a1 as a}from"./framework-cf3d8b6f.js";const o={},s=a('<h1 id="数据表规则" tabindex="-1"><a class="header-anchor" href="#数据表规则" aria-hidden="true">#</a> 数据表规则</h1><div class="custom-container tip"><p class="custom-container-title">提示</p><p>遵循本规则，可在使用代码生成器时顺利的完成功能开发</p></div><h2 id="表名称规则" tabindex="-1"><a class="header-anchor" href="#表名称规则" aria-hidden="true">#</a> 表名称规则</h2><ul><li>检查 <code>.env</code> 是否使用了表前缀功能，如没有，可跳过这一条</li><li>在创建数据表时，请注意自己的业务功能属于哪个模块，系统自带 <code>system</code> 和 <code>setting</code> 模块</li></ul><h3 id="有表前缀的规则" tabindex="-1"><a class="header-anchor" href="#有表前缀的规则" aria-hidden="true">#</a> 有表前缀的规则</h3><p>如使用了表前缀，表的命名规则：<code>表前缀_模块名_表名称</code></p><p>比如：<code>ma_system_user</code></p><p><code>ma_</code> 为表前缀，<code>system_</code> 为模块名称，<code>user</code> 代表用户表</p><h3 id="无表前缀的规则" tabindex="-1"><a class="header-anchor" href="#无表前缀的规则" aria-hidden="true">#</a> 无表前缀的规则</h3><p>没有使用表前缀表的命名规则：<code>模块名_表名称</code></p><p>比如：<code>system_user</code></p><p><code>system_</code> 为模块名称，<code>user</code> 代表用户表</p><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h2><div class="custom-container danger"><p class="custom-container-title">注意</p><ul><li>表名称不要以 <code>data</code> 或者 <code>s</code> 结尾，因模型生成问题，会对这两种结尾的名称进行改名，造成意外的状况发生。</li><li>对于模块使用驼峰命名例如<code>AdminUser</code>,生成代码时匹配的数据库模块名为 <code>adminuser</code> 。</li></ul></div>',14),t=[s];function i(r,n){return d(),c("div",null,t)}const l=e(o,[["render",i],["__file","db.html.vue"]]);export{l as default};
