import{_ as t,M as h,p as i,q as d,R as r,t as e,N as o,a1 as n}from"./framework-cf3d8b6f.js";const c={},s=n('<h1 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h1><h2 id="不能通过全局变量获取属性参数" tabindex="-1"><a class="header-anchor" href="#不能通过全局变量获取属性参数" aria-hidden="true">#</a> 不能通过全局变量获取属性参数</h2><p>在 <code>PHP-FPM</code> 下可以通过全局变量获取到请求的参数，服务器的参数等，在 Hyperf 和 Swoole 内，都无法通过 <code>$_GET/$_POST/$_REQUEST/$_SESSION/$_COOKIE/$_SERVER</code> 等 <code>$_</code> 开头的变量获取到任何属性参数。</p><h2 id="通过容器获取的类都是单例" tabindex="-1"><a class="header-anchor" href="#通过容器获取的类都是单例" aria-hidden="true">#</a> 通过容器获取的类都是单例</h2>',4),l={href:"https://hyperf.wiki/2.2/#/zh-cn/di",target:"_blank",rel:"noopener noreferrer"},p={href:"https://hyperf.wiki/2.2/#/zh-cn/coroutine",target:"_blank",rel:"noopener noreferrer"},_=n('<h2 id="代码不生效" tabindex="-1"><a class="header-anchor" href="#代码不生效" aria-hidden="true">#</a> 代码不生效</h2><p>执行 <code>composer dump-autoload -o</code> 命令，重启服务</p><h2 id="存在兼容性问题的扩展" tabindex="-1"><a class="header-anchor" href="#存在兼容性问题的扩展" aria-hidden="true">#</a> 存在兼容性问题的扩展</h2><p>由于 Hyperf 基于 Swoole 协程实现，而 Swoole 4 带来的协程与不少扩展都仍存在兼容性的问题。 以下扩展（包括但不限于）都会造成一定的兼容性问题，不能与之共用或共存：</p><ul><li>xhprof</li><li>xdebug</li><li>blackfire</li><li>trace</li><li>uopz</li></ul><h2 id="hyperf-常见问题" tabindex="-1"><a class="header-anchor" href="#hyperf-常见问题" aria-hidden="true">#</a> Hyperf 常见问题</h2>',6),f={href:"https://hyperf.wiki/2.2/#/zh-cn/quick-start/questions",target:"_blank",rel:"noopener noreferrer"};function u(x,k){const a=h("ExternalLinkIcon");return i(),d("div",null,[s,r("p",null,[e("通过依赖注入容器获取的都是进程内持久化的，是多个协程共享的，所以不能包含任何的请求唯一的数据或协程唯一的数据，这类型的数据都通过协程上下文去处理，具体请仔细阅读hyperf官方的 "),r("a",l,[e("依赖注入"),o(a)]),e(" 和 "),r("a",p,[e("协程"),o(a)]),e(" 章节。")]),_,r("p",null,[e("访问hyperf官方文档 "),r("a",f,[e("常见问题"),o(a)])])])}const m=t(c,[["render",u],["__file","index.html.vue"]]);export{m as default};
