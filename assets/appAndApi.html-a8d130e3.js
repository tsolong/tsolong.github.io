import{_ as c,M as p,p as l,q as r,R as a,N as s,t as n,a1 as t}from"./framework-cf3d8b6f.js";const d={},u=t('<h1 id="应用与接口" tabindex="-1"><a class="header-anchor" href="#应用与接口" aria-hidden="true">#</a> 应用与接口</h1><div class="custom-container tip"><p class="custom-container-title">说明</p><p>MineAdmin提供了一套对外部授权的API应用系统</p><ul><li>实现了最高基于 OAuth2.0 协议授权</li><li>实现了文档自动化生成</li><li>提供了应用分组、接口分组管理</li></ul></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>这套API应用系统并不建议在系统内部本身使用，若使用反而会造成业务上的繁琐，使得变的更加复杂。</p></div><h2 id="应用" tabindex="-1"><a class="header-anchor" href="#应用" aria-hidden="true">#</a> 应用</h2><div class="custom-container tip"><p class="custom-container-title">提示</p><p>创建应用前，请先创建应用分组</p></div><p>创建应用会生成一个 <code>appId</code> 和 <code>appSecret</code>。这两个参数是授权给外部访问接口的重要凭证</p><img src="https://s1.ax1x.com/2022/09/28/xmVa5R.png"><div class="custom-container warning"><p class="custom-container-title">注意</p><p>编辑应用时，刷新 <code>appId</code> 和 <code>appSecret</code> 操作会导致正常使用应用接口的访问全部失效。</p></div><h2 id="接口" tabindex="-1"><a class="header-anchor" href="#接口" aria-hidden="true">#</a> 接口</h2><img src="https://s1.ax1x.com/2022/09/28/xmZSMT.png"><h3 id="说明" tabindex="-1"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h3><ul><li>接口名称：一般填入该接口的主要作用，比如 <code>获取用户列表</code></li><li>访问名称：接口的真实访问地址，接口都是以 <code>http://xxx.com/api/v1/{访问名称}</code> 形式访问</li><li>请求模式：支持 <code>所有、POST、GET、DELETE、PUT</code> 等形式。</li><li>类名称：填入类的命名空间地址，例如：<code>Api\\InterfaceApi\\v1\\DemoApi</code></li><li>方法名称：填入类里的方法名称，例如：<code>getUserList</code></li></ul><div class="custom-container tip"><p class="custom-container-title">访问名称定义小技巧</p><p>访问名称不支持 <code>/</code> ，但可以用 <code>.</code> 来区分层级。</p><p>比如，我们对外授权以路由划分功能模块，有 <code>新增用户</code> 接口 和 <code>获取用户列表</code> 接口，那么可以用下面的方式来定义：</p><ul><li>user.add</li><li>user.list</li></ul><p>外部访问实际地址就是：</p><ul><li>http://xxx.com/api/v1/user.add</li><li>http://xxx.com/api/v1/user.list</li></ul></div><h2 id="注解定义方式" tabindex="-1"><a class="header-anchor" href="#注解定义方式" aria-hidden="true">#</a> 注解定义方式</h2>',14),m={class:"custom-container tip"},k={class:"custom-container-title"},h=a("code",null,"1.3.0",-1),v={href:"https://github.com/netyum",target:"_blank",rel:"noopener noreferrer"},b=t('<h3 id="访问接口定义注解" tabindex="-1"><a class="header-anchor" href="#访问接口定义注解" aria-hidden="true">#</a> 访问接口定义注解</h3><h4 id="注解名" tabindex="-1"><a class="header-anchor" href="#注解名" aria-hidden="true">#</a> 注解名</h4><ul><li><strong>#[MApi]</strong></li></ul><h4 id="使用范围" tabindex="-1"><a class="header-anchor" href="#使用范围" aria-hidden="true">#</a> 使用范围</h4>',4),g=a("h4",{id:"注解参数",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#注解参数","aria-hidden":"true"},"#"),n(" 注解参数")],-1),x=t('<h3 id="请求入参注解" tabindex="-1"><a class="header-anchor" href="#请求入参注解" aria-hidden="true">#</a> 请求入参注解</h3><ul><li>注解暂时仅仅用于生成文档</li></ul><h4 id="注解名-1" tabindex="-1"><a class="header-anchor" href="#注解名-1" aria-hidden="true">#</a> 注解名</h4><ul><li><strong>#[MApiRequestParam]</strong></li></ul><h4 id="使用范围-1" tabindex="-1"><a class="header-anchor" href="#使用范围-1" aria-hidden="true">#</a> 使用范围</h4>',5),f=a("h4",{id:"注解参数-1",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#注解参数-1","aria-hidden":"true"},"#"),n(" 注解参数")],-1),y=t('<h3 id="响应出参注解" tabindex="-1"><a class="header-anchor" href="#响应出参注解" aria-hidden="true">#</a> 响应出参注解</h3><ul><li>注解暂时仅仅用于生成文档</li></ul><h4 id="注解名-2" tabindex="-1"><a class="header-anchor" href="#注解名-2" aria-hidden="true">#</a> 注解名</h4><ul><li><strong>#[MApiResponseParam]</strong></li></ul><h4 id="使用范围-2" tabindex="-1"><a class="header-anchor" href="#使用范围-2" aria-hidden="true">#</a> 使用范围</h4>',5),_=a("h4",{id:"注解参数-2",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#注解参数-2","aria-hidden":"true"},"#"),n(" 注解参数")],-1),I=t(`<h3 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码" aria-hidden="true">#</a> 示例代码</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">class</span> <span class="token class-name-definition class-name">DemoApi</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * <span class="token keyword">@var</span> <span class="token class-name">SystemUserMapper</span>
     */</span>
    <span class="token keyword">protected</span> <span class="token class-name type-declaration">SystemUserMapper</span> <span class="token variable">$user</span><span class="token punctuation">;</span>

    <span class="token keyword">protected</span> <span class="token class-name type-declaration">MineResponse</span> <span class="token variable">$response</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * DemoApi constructor.
     * <span class="token keyword">@param</span> <span class="token class-name">SystemUserMapper</span> <span class="token parameter">$user</span>
     * <span class="token keyword">@param</span> <span class="token class-name">SystemDeptMapper</span> <span class="token parameter">$dept</span>
     * <span class="token keyword">@throws</span> <span class="token class-name">ContainerExceptionInterface</span>
     * <span class="token keyword">@throws</span> <span class="token class-name">NotFoundExceptionInterface</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token class-name type-declaration">SystemUserMapper</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">SystemDeptMapper</span> <span class="token variable">$dept</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">response</span> <span class="token operator">=</span> <span class="token function">container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name static-context">MineResponse</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">user</span> <span class="token operator">=</span> <span class="token variable">$user</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 获取用户信息
     * <span class="token keyword">@return</span> <span class="token class-name">ResponseInterface</span>
     * <span class="token keyword">@throws</span> <span class="token class-name">ContainerExceptionInterface</span>
     * <span class="token keyword">@throws</span> <span class="token class-name">NotFoundExceptionInterface</span>
     */</span>
    <span class="token comment"># appId 换成自己的 groupId 换成自己的 (前端更新，这两个必须有，后台才能看到文档</span>
    <span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">MApi</span><span class="token punctuation">(</span><span class="token attribute-class-name class-name">accessName</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;getUserInfo&quot;</span><span class="token punctuation">,</span> <span class="token attribute-class-name class-name">name</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;获取用户信息&quot;</span><span class="token punctuation">,</span> <span class="token attribute-class-name class-name">description</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;获取用户信息&quot;</span><span class="token punctuation">,</span> <span class="token attribute-class-name class-name">appId</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;a7ccdef6d7&quot;</span><span class="token punctuation">,</span> <span class="token attribute-class-name class-name">groupId</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">]</span></span>
    <span class="token comment"># 请求入参 以下注解暂时仅仅用于生成文档 仅仅作为示例，可以没有</span>
    <span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">MApiRequestParam</span><span class="token punctuation">(</span><span class="token attribute-class-name class-name">name</span><span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token attribute-class-name class-name">description</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;用户id&quot;</span><span class="token punctuation">,</span> <span class="token attribute-class-name class-name">dataType</span><span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;Integer&#39;</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">]</span></span>
    <span class="token comment"># 响应出参 以下注解暂时仅仅用于生成文档</span>
    <span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name">MApiResponseParam</span><span class="token punctuation">(</span><span class="token attribute-class-name class-name">name</span><span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;info&#39;</span><span class="token punctuation">,</span> <span class="token attribute-class-name class-name">description</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;用户信息&quot;</span><span class="token punctuation">,</span> <span class="token attribute-class-name class-name">dataType</span><span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;Object&#39;</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">]</span></span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getUserInfo</span><span class="token punctuation">(</span><span class="token class-name type-declaration">UserInfoRequest</span> <span class="token variable">$userInfoRequest</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">ResponseInterface</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 标准formRequest</span>
        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$userInfoRequest</span><span class="token operator">-&gt;</span><span class="token function">validated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$info</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">user</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">response</span><span class="token operator">-&gt;</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;请求成功&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;info&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$info</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="文档" tabindex="-1"><a class="header-anchor" href="#文档" aria-hidden="true">#</a> 文档</h2><h3 id="如何进入文档" tabindex="-1"><a class="header-anchor" href="#如何进入文档" aria-hidden="true">#</a> 如何进入文档</h3><p>通过 <code>应用管理</code> 列表的 <code>操作栏</code> 进入应用接口文档</p><img src="https://s1.ax1x.com/2022/09/28/xmmqde.png"><h3 id="文档界面介绍" tabindex="-1"><a class="header-anchor" href="#文档界面介绍" aria-hidden="true">#</a> 文档界面介绍</h3><img src="https://s1.ax1x.com/2022/10/02/xMYGee.png"><img src="https://s1.ax1x.com/2022/10/02/xMYNFA.png">`,9);function q(w,A){const o=p("a-badge"),i=p("ExternalLinkIcon"),e=p("a-table");return l(),r("div",null,[u,a("div",m,[a("p",k,[s(o,{text:"1.3.0+"})]),a("p",null,[n("在 "),h,n(" 新增注解定义API的方式，省去了后台添加数据的繁杂步骤。 注解定义方式由 "),a("a",v,[n("netyum"),s(i)]),n(" 贡献，大家给予掌声和鲜花。")])]),b,s(e,{style:{"margin-top":"20px"},size:"small",data:[{class:"x",method:"√"}],pagination:!1,columns:[{title:"类",dataIndex:"class"},{title:"方法",dataIndex:"method"}]}),g,s(e,{style:{"margin-top":"20px"},size:"small",data:[{p:"name",rm:"接口名称，一般显示在文档上面",dv:"-"},{p:"accessName",rm:"接口的真实访问地址",dv:"-"},{p:"description",rm:"接口描述",dv:"-"},{p:"appId",rm:"绑定所属的App应用，需指定APP ID字段",dv:"-"},{p:"groupId",rm:"绑定所在接口分组，需指定分组id字段",dv:"-"},{p:"authMode",rm:"验证模式，1:简单模式，2:复杂模式",dv:1},{p:"requestMode",rm:"请求方式，A:所有，P:POST，G:GET，U:UPDATE，D:DELETE",dv:"A"}],pagination:!1,columns:[{title:"参数名",width:200,dataIndex:"p"},{title:"说明",dataIndex:"rm"},{title:"默认值",width:150,dataIndex:"dv"}]}),x,s(e,{style:{"margin-top":"20px"},size:"small",data:[{class:"x",method:"√"}],pagination:!1,columns:[{title:"类",dataIndex:"class"},{title:"方法",dataIndex:"method"}]}),f,s(e,{style:{"margin-top":"20px"},size:"small",data:[{p:"name",rm:"参数名称",dv:"-"},{p:"description",rm:"参数描述",dv:"-"},{p:"dataType",rm:"参数类型 String, Integer, Array, Float, Boolean, Enum, Object, File",dv:"String"},{p:"defaultValue",rm:"参数默认值",dv:"-"},{p:"isRequired",rm:"是否必须，1：非必填，2：必填",dv:1}],pagination:!1,columns:[{title:"参数名",width:200,dataIndex:"p"},{title:"说明",dataIndex:"rm"},{title:"默认值",width:150,dataIndex:"dv"}]}),y,s(e,{style:{"margin-top":"20px"},size:"small",data:[{class:"x",method:"√"}],pagination:!1,columns:[{title:"类",dataIndex:"class"},{title:"方法",dataIndex:"method"}]}),_,s(e,{style:{"margin-top":"20px"},size:"small",data:[{p:"name",rm:"参数名称",dv:"-"},{p:"description",rm:"参数描述",dv:"-"},{p:"dataType",rm:"参数类型 String, Integer, Array, Float, Boolean, Enum, Object, File",dv:"String"},{p:"defaultValue",rm:"参数默认值",dv:"-"}],pagination:!1,columns:[{title:"参数名",width:200,dataIndex:"p"},{title:"说明",dataIndex:"rm"},{title:"默认值",width:150,dataIndex:"dv"}]}),I])}const $=c(d,[["render",q],["__file","appAndApi.html.vue"]]);export{$ as default};
