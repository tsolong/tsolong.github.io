import{_ as n,p as s,q as a,a1 as e}from"./framework-cf3d8b6f.js";const t={},p=e(`<h1 id="国际化-i18n" tabindex="-1"><a class="header-anchor" href="#国际化-i18n" aria-hidden="true">#</a> 国际化（I18n）</h1><div class="custom-container tip"><p class="custom-container-title">提示</p><p>系统已经完成了国际化的基础，只需要配置相对应的语言包即可实现国际化多语言功能</p><p>注意：前端和后端有各自的语言包</p></div><h2 id="前端多语言" tabindex="-1"><a class="header-anchor" href="#前端多语言" aria-hidden="true">#</a> 前端多语言</h2><ul><li>前端的多语言包目录：<code>src/i18n</code>，默认自带了 <code>zh_CN</code> 和 <code>en</code></li><li>前端语言包按不同的功能建立了不同的文件</li><li>菜单的语言包文件为 <code>menu.js</code> 新增的菜单可在此文件添加对应的语言</li></ul><h3 id="新建多语言文件" tabindex="-1"><a class="header-anchor" href="#新建多语言文件" aria-hidden="true">#</a> 新建多语言文件</h3><p><code>src/i18n/zh_CN/foo.js</code> 和 <code>src/i18n/en/foo.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// zh_CN/foo.js</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;演示示例&#39;</span>
<span class="token punctuation">}</span>

<span class="token comment">// en/foo.js</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;demo example&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h3><p><code>src/views/system/foo/index.vue</code></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 模板里使用 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>{{ $t(&#39;foo.name&#39;) }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- script里使用 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">// 载入</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useI18n <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-i18n&#39;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> t <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useI18n</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 使用</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;foo.name&#39;</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="后端多语言" tabindex="-1"><a class="header-anchor" href="#后端多语言" aria-hidden="true">#</a> 后端多语言</h2><ul><li>后端的多语言包目录：<code>stroage/languages</code>，默认自带了 <code>zh_CN</code> 和 <code>en</code></li><li>后端语言包按不同的功能建立了不同的文件</li></ul><h3 id="新建多语言文件-1" tabindex="-1"><a class="header-anchor" href="#新建多语言文件-1" aria-hidden="true">#</a> 新建多语言文件</h3><p><code>stroage/languages/zh_CN/foo.php</code> 和 <code>stroage/languages/en/foo.php</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// zh_CN/foo.php</span>
<span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;演示示例&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// en/foo.php</span>
<span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;demo example&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-1" tabindex="-1"><a class="header-anchor" href="#使用-1" aria-hidden="true">#</a> 使用</h3><ul><li>后端封装了专门的多语言 <code>t()</code> 函数，可在任何地方调用</li></ul><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;foo.name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,18),o=[p];function i(c,l){return s(),a("div",null,o)}const r=n(t,[["render",i],["__file","i18n.html.vue"]]);export{r as default};
